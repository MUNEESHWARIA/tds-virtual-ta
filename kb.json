[
  {
    "keywords": ["gpt-4o-mini", "gpt-3.5-turbo", "ai", "proxy", "model"],
    "related_terms": ["openai", "api", "token", "usage"],
    "category": ["ai", "api", "assignment"],
    "answer": "You must use `gpt-3.5-turbo-0125`, even if the AI Proxy only supports `gpt-4o-mini`. Use the OpenAI API directly for this question.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/4",
        "text": "Use the model that's mentioned in the question."
      },
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/3",
        "text": "My understanding is that you just have to use a tokenizer, similar to what Prof. Anand used, to get the number of tokens and multiply that by the given rate."
      }
    ]
  },
  {
    "keywords": ["python", "setup", "install", "environment"],
    "related_terms": ["pip", "conda", "virtual", "venv", "anaconda"],
    "category": ["python", "setup", "installation"],
    "answer": "To set up Python for TDS, you need Python 3.8+ with pip. Create a virtual environment using `python -m venv tds_env` and activate it. Install required packages using `pip install -r requirements.txt`. Make sure to use the same Python version consistently throughout the course.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/python-setup-guide/12345",
        "text": "Complete Python setup guide for TDS"
      }
    ]
  },
  {
    "keywords": ["assignment", "submission", "deadline", "grading"],
    "related_terms": ["marks", "evaluation", "score", "late"],
    "category": ["assignment", "academic"],
    "answer": "Check the assignment submission guidelines on the course portal. Make sure to submit before the deadline and follow the required format. Late submissions may incur penalties as per course policy.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/c/tds/",
        "text": "TDS Course Discussion Forum"
      }
    ]
  },
  {
    "keywords": ["api", "rest", "endpoint", "flask"],
    "related_terms": ["post", "get", "json", "response", "request"],
    "category": ["api", "web", "programming"],
    "answer": "For creating REST APIs, use Flask with proper error handling. Define endpoints with appropriate HTTP methods (GET, POST, etc.). Always return JSON responses with proper status codes. Include input validation and documentation.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/flask-api-best-practices/12346",
        "text": "Flask API development best practices"
      }
    ]
  },
  {
    "keywords": ["deployment", "railway", "heroku", "hosting"],
    "related_terms": ["production", "cloud", "server", "url"],
    "category": ["deployment", "hosting"],
    "answer": "For deployment, you can use platforms like Railway, Heroku, or Render. Make sure your app listens on the PORT environment variable, include a Procfile or start command, and ensure all dependencies are in requirements.txt. Test your deployed endpoint thoroughly.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/deployment-guide/12347",
        "text": "Step-by-step deployment guide"
      }
    ]
  },
  {
    "keywords": ["error", "debug", "troubleshooting", "bug"],
    "related_terms": ["fix", "problem", "issue", "solution"],
    "category": ["debugging", "help"],
    "answer": "When debugging, check error logs first, ensure proper error handling in your code, validate input data format, and test endpoints individually. Common issues include missing dependencies, wrong HTTP methods, or malformed JSON.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/c/tds/",
        "text": "Ask for help on TDS forum"
      }
    ]
  },
  {
    "keywords": ["github", "repository", "license", "mit"],
    "related_terms": ["public", "code", "version", "control"],
    "category": ["github", "project"],
    "answer": "Ensure your GitHub repository is public and includes an MIT LICENSE file in the root directory. Your repository should have clear documentation, proper file structure, and working code. Follow the project submission guidelines exactly.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/github-setup-guide/12348",
        "text": "GitHub repository setup guide"
      }
    ]
  },
  {
    "keywords": ["data", "scraping", "discourse", "posts"],
    "related_terms": ["extract", "crawl", "collect", "parse"],
    "category": ["data", "scraping"],
    "answer": "For scraping Discourse posts, use proper rate limiting, handle pagination, respect robots.txt, and parse HTML/JSON responses carefully. Include date range filtering and category selection. Always be respectful of the server resources.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/data-scraping-guidelines/12349",
        "text": "Data scraping best practices"
      }
    ]
  }
]
