[
  {
    "keywords": ["gpt", "model", "ai", "proxy", "gpt-4o-mini", "gpt3.5", "turbo"],
    "related_terms": ["openai", "api", "token", "rate"],
    "category": ["ai", "model", "assignment"],
    "answer": "You must use `gpt-3.5-turbo-0125`, even if the AI Proxy only supports `gpt-4o-mini`. Use the OpenAI API directly for this question.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/4",
        "text": "Use the model that's mentioned in the question."
      },
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/ga5-question-8-clarification/155939/3",
        "text": "My understanding is that you just have to use a tokenizer, similar to what Prof. Anand used, to get the number of tokens and multiply that by the given rate."
      }
    ]
  },
  {
    "keywords": ["python", "setup", "install", "environment"],
    "related_terms": ["pip", "conda", "virtual", "requirements"],
    "category": ["python", "setup"],
    "answer": "To set up Python for TDS: 1) Install Python 3.8+, 2) Create a virtual environment using `python -m venv tds_env`, 3) Activate it with `source tds_env/bin/activate` (Linux/Mac) or `tds_env\\Scripts\\activate` (Windows), 4) Install packages with `pip install -r requirements.txt`",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/python-installation-guide",
        "text": "Python Installation Guide"
      }
    ]
  },
  {
    "keywords": ["assignment", "submission", "deadline", "late"],
    "related_terms": ["due", "extension", "penalty"],
    "category": ["assignment", "policy"],
    "answer": "Assignments must be submitted by the specified deadline. Late submissions may incur penalties as per course policy. Check the course schedule for exact deadlines.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/assignment-policy",
        "text": "Assignment Submission Policy"
      }
    ]
  },
  {
    "keywords": ["jupyter", "notebook", "colab", "google"],
    "related_terms": ["kernel", "cell", "markdown"],
    "category": ["jupyter", "tools"],
    "answer": "You can use Jupyter Notebook locally or Google Colab for assignments. For local setup: `pip install jupyter` then `jupyter notebook`. For Colab, visit colab.research.google.com",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/jupyter-setup-guide",
        "text": "Jupyter Notebook Setup Guide"
      }
    ]
  },
  {
    "keywords": ["api", "rest", "http", "request"],
    "related_terms": ["get", "post", "json", "curl"],
    "category": ["api", "web"],
    "answer": "REST APIs use HTTP methods (GET, POST, PUT, DELETE) to interact with web services. Use libraries like `requests` in Python: `import requests; response = requests.get('https://api.example.com')`",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/api-tutorial",
        "text": "API Tutorial for TDS"
      }
    ]
  },
  {
    "keywords": ["git", "github", "version", "control"],
    "related_terms": ["clone", "commit", "push", "pull", "branch"],
    "category": ["git", "tools"],
    "answer": "Git is used for version control. Basic commands: `git clone <url>`, `git add .`, `git commit -m 'message'`, `git push`. Create a GitHub account and repository for your projects.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/git-tutorial",
        "text": "Git Tutorial for TDS"
      }
    ]
  },
  {
    "keywords": ["docker", "container", "deployment"],
    "related_terms": ["dockerfile", "image", "build", "run"],
    "category": ["docker", "deployment"],
    "answer": "Docker containerizes applications for consistent deployment. Create a Dockerfile, build with `docker build -t myapp .`, run with `docker run -p 5000:5000 myapp`",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/docker-guide",
        "text": "Docker Guide for TDS"
      }
    ]
  },
  {
    "keywords": ["flask", "web", "server", "app"],
    "related_terms": ["route", "render", "template"],
    "category": ["flask", "web"],
    "answer": "Flask is a Python web framework. Basic app: `from flask import Flask; app = Flask(__name__); @app.route('/'); def home(): return 'Hello!'; app.run()`",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/flask-tutorial",
        "text": "Flask Tutorial for TDS"
      }
    ]
  },
  {
    "keywords": ["railway", "deployment", "hosting", "cloud"],
    "related_terms": ["heroku", "render", "vercel"],
    "category": ["deployment", "hosting"],
    "answer": "Railway is a cloud platform for deploying applications. Connect your GitHub repo, Railway auto-detects your app type and deploys. Set environment variables as needed.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/deployment-guide",
        "text": "Deployment Guide for TDS"
      }
    ]
  },
  {
    "keywords": ["error", "debug", "troubleshoot", "bug"],
    "related_terms": ["exception", "traceback", "fix"],
    "category": ["debugging", "help"],
    "answer": "For debugging: 1) Read error messages carefully, 2) Check the traceback, 3) Use print statements or debugger, 4) Search the error online, 5) Ask on Discourse with full error details.",
    "links": [
      {
        "url": "https://discourse.onlinedegree.iitm.ac.in/t/debugging-tips",
        "text": "Debugging Tips for TDS"
      }
    ]
  }
]
